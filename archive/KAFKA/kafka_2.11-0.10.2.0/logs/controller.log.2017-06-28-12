[2017-06-28 12:01:38,273] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 12:01:38,415] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 12:01:38,430] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 12:01:38,486] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 12:06:38,262] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 12:06:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 12:06:38,266] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 12:06:38,267] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 12:09:59,152] INFO [SessionExpirationListener on 0], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2017-06-28 12:09:59,182] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2017-06-28 12:09:59,183] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-28 12:09:59,187] INFO [delete-topics-thread-0], Shutting down (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:09:59,191] INFO [delete-topics-thread-0], Shutdown completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:09:59,193] INFO [delete-topics-thread-0], Stopped  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:09:59,206] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2017-06-28 12:09:59,208] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:09:59,226] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2017-06-28 12:09:59,229] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2017-06-28 12:09:59,229] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2017-06-28 12:09:59,230] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2017-06-28 12:09:59,249] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2017-06-28 12:09:59,268] INFO [Controller 0]: Initialized controller epoch to 81 and zk version 80 (kafka.controller.KafkaController)
[2017-06-28 12:09:59,283] INFO [Controller 0]: Controller 0 incremented epoch to 82 (kafka.controller.KafkaController)
[2017-06-28 12:09:59,285] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-28 12:09:59,664] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 12:09:59,666] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 12:09:59,666] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2017-06-28 12:09:59,670] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2017-06-28 12:09:59,670] INFO [Controller 0]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2017-06-28 12:09:59,670] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2017-06-28 12:09:59,675] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2017-06-28 12:09:59,675] INFO [Controller 0]: List of topics ineligible for deletion: __consumer_offsets,mariotest (kafka.controller.KafkaController)
[2017-06-28 12:09:59,679] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:09:59,680] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:09:59,680] INFO [Controller 0]: Current list of topics in the cluster: Set(mariotest, __consumer_offsets) (kafka.controller.KafkaController)
[2017-06-28 12:09:59,698] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=39,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=20,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=3,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=45,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=8,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=0] -> ReplicaDeletionIneligible, [Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=44,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=23,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=31,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=41,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=13,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=25,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=35,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:09:59,738] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,19]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,763] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,30]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,767] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,47]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,800] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,29]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,807] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,41]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,818] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,39]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,825] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,17]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,837] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,10]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,843] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,14]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,861] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,40]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,874] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,18]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,883] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,893] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,26]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,904] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,24]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,908] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,33]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,912] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,20]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,915] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,21]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,927] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,3]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,932] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,22]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,941] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,5]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,952] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,12]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,959] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,8]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,966] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,23]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:09:59,976] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,15]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,000] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,11]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,005] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,48]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,009] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,13]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,014] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,6]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,021] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,49]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,033] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,4]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,036] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,28]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,040] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,37]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,058] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,31]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,078] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,44]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,082] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,42]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,087] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,34]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,093] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,46]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,099] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,25]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,106] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,27]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,116] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,45]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,129] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,32]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,133] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,43]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,137] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,36]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,142] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,35]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,150] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,7]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,158] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,38]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,166] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,9]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,182] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [mariotest,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,188] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,193] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,199] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,16]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,213] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([__consumer_offsets,19] -> OfflinePartition, [__consumer_offsets,30] -> OfflinePartition, [__consumer_offsets,47] -> OfflinePartition, [__consumer_offsets,29] -> OfflinePartition, [__consumer_offsets,41] -> OfflinePartition, [__consumer_offsets,39] -> OfflinePartition, [__consumer_offsets,17] -> OfflinePartition, [__consumer_offsets,10] -> OfflinePartition, [__consumer_offsets,14] -> OfflinePartition, [__consumer_offsets,40] -> OfflinePartition, [__consumer_offsets,18] -> OfflinePartition, [__consumer_offsets,0] -> OfflinePartition, [__consumer_offsets,26] -> OfflinePartition, [__consumer_offsets,24] -> OfflinePartition, [__consumer_offsets,33] -> OfflinePartition, [__consumer_offsets,20] -> OfflinePartition, [__consumer_offsets,21] -> OfflinePartition, [__consumer_offsets,3] -> OfflinePartition, [__consumer_offsets,22] -> OfflinePartition, [__consumer_offsets,5] -> OfflinePartition, [__consumer_offsets,12] -> OfflinePartition, [__consumer_offsets,8] -> OfflinePartition, [__consumer_offsets,23] -> OfflinePartition, [__consumer_offsets,15] -> OfflinePartition, [__consumer_offsets,11] -> OfflinePartition, [__consumer_offsets,48] -> OfflinePartition, [__consumer_offsets,13] -> OfflinePartition, [__consumer_offsets,6] -> OfflinePartition, [__consumer_offsets,49] -> OfflinePartition, [__consumer_offsets,4] -> OfflinePartition, [__consumer_offsets,28] -> OfflinePartition, [__consumer_offsets,37] -> OfflinePartition, [__consumer_offsets,31] -> OfflinePartition, [__consumer_offsets,44] -> OfflinePartition, [__consumer_offsets,42] -> OfflinePartition, [__consumer_offsets,34] -> OfflinePartition, [__consumer_offsets,46] -> OfflinePartition, [__consumer_offsets,25] -> OfflinePartition, [__consumer_offsets,27] -> OfflinePartition, [__consumer_offsets,45] -> OfflinePartition, [__consumer_offsets,32] -> OfflinePartition, [__consumer_offsets,43] -> OfflinePartition, [__consumer_offsets,36] -> OfflinePartition, [__consumer_offsets,35] -> OfflinePartition, [__consumer_offsets,7] -> OfflinePartition, [__consumer_offsets,38] -> OfflinePartition, [__consumer_offsets,9] -> OfflinePartition, [mariotest,0] -> OfflinePartition, [__consumer_offsets,1] -> OfflinePartition, [__consumer_offsets,2] -> OfflinePartition, [__consumer_offsets,16] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,215] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 82 (kafka.controller.KafkaController)
[2017-06-28 12:10:00,215] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2017-06-28 12:10:00,215] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,219] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2017-06-28 12:10:00,253] INFO [delete-topics-thread-0], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:10:00,254] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:10:00,269] DEBUG [IsrChangeNotificationListener on Controller 0]: ISR change notification listener fired (kafka.controller.IsrChangeNotificationListener)
[2017-06-28 12:10:00,270] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:10:00,276] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:10:00,276] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2017-06-28 12:10:00,286] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2017-06-28 12:10:00,286] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-06-28 12:10:00,291] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to alarcj-ThinkPad-T460s:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-28 12:10:00,293] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=__consumer_offsets,Partition=12,Replica=0],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=__consumer_offsets,Partition=35,Replica=0],[Topic=__consumer_offsets,Partition=9,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=__consumer_offsets,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=11,Replica=0],[Topic=__consumer_offsets,Partition=29,Replica=0],[Topic=__consumer_offsets,Partition=30,Replica=0],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=42,Replica=0],[Topic=__consumer_offsets,Partition=26,Replica=0],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=17,Replica=0],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=27,Replica=0],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=41,Replica=0],[Topic=__consumer_offsets,Partition=20,Replica=0],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=39,Replica=0],[Topic=__consumer_offsets,Partition=47,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=24,Replica=0],[Topic=__consumer_offsets,Partition=6,Replica=0],[Topic=__consumer_offsets,Partition=36,Replica=0],[Topic=__consumer_offsets,Partition=8,Replica=0],[Topic=__consumer_offsets,Partition=38,Replica=0],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=21,Replica=0],[Topic=__consumer_offsets,Partition=18,Replica=0],[Topic=__consumer_offsets,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=48,Replica=0],[Topic=__consumer_offsets,Partition=5,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=mariotest,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=3,Replica=0],[Topic=__consumer_offsets,Partition=44,Replica=0],[Topic=__consumer_offsets,Partition=15,Replica=0],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=0],[Topic=__consumer_offsets,Partition=33,Replica=0],[Topic=__consumer_offsets,Partition=45,Replica=0],[Topic=__consumer_offsets,Partition=23,Replica=0],[Topic=__consumer_offsets,Partition=32,Replica=0],[Topic=__consumer_offsets,Partition=14,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:10:00,314] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,19]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,315] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,19] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,331] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,347] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,30]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,347] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,30] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,352] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,353] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,47]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,353] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,47] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,355] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,356] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,29]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,357] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,29] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,359] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,361] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,41]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,361] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,41] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,366] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,368] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,39]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,368] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,39] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,370] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,372] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,17]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,372] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,17] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,375] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,376] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,10]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,376] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,10] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,379] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,381] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,14]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,381] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,14] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,390] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,391] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,40]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,391] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,40] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,394] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,396] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,18]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,396] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,18] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,412] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,414] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,414] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,417] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,418] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,26]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,418] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,26] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,420] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,422] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,24]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,422] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,24] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,424] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,426] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,33]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,426] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,33] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,428] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,429] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,20]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,429] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,20] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,431] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,432] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,21]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,432] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,21] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,436] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,437] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,3]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,438] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,3] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,448] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,450] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,22]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,450] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,22] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,453] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,455] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,5]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,455] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,5] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,457] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,459] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,12]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,459] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,12] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,462] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,463] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,8]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,463] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,8] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,474] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,476] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,23]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,477] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,23] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,480] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,482] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,15]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,482] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,15] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,485] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,491] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,11]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,491] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,11] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,494] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,496] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,48]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,496] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,48] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,501] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,512] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,13]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,512] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,13] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,514] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,516] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,6]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,516] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,6] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,518] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,520] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,49]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,520] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,49] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,522] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,523] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,4]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,523] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,4] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,525] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,527] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,28]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,527] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,28] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,530] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,531] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,37]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,531] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,37] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,534] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,537] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,31]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,537] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,31] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,544] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,545] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,44]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,545] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,44] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,548] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,550] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,42]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,551] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,42] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,554] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,557] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,34]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,557] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,34] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,561] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,562] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,46]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,562] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,46] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,567] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,586] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,25]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,586] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,25] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,588] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,589] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,27]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,589] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,27] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,591] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,593] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,45]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,593] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,45] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,594] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,596] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,32]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,596] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,32] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,598] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,599] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,43]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,599] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,43] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,603] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,604] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,36]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,604] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,36] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,615] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,616] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,35]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,616] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,35] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,619] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,621] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,7]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,621] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,7] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,624] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,625] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,38]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,625] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,38] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,628] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,629] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,9]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,629] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,9] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,633] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,635] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [mariotest,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,635] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [mariotest,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,637] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,638] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,639] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,648] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,649] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,649] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,652] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,654] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,16]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,654] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":80,"isr":[0]} for offline partition [__consumer_offsets,16] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:10:00,659] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:10:00,667] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:10:00,694] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:10:00,694] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:10:00,702] INFO [AddPartitionsListener on Controller 0]: Partition modification triggered {"version":1,"partitions":{"45":[0],"34":[0],"12":[0],"8":[0],"19":[0],"23":[0],"4":[0],"40":[0],"15":[0],"11":[0],"9":[0],"44":[0],"33":[0],"22":[0],"26":[0],"37":[0],"13":[0],"46":[0],"24":[0],"35":[0],"16":[0],"5":[0],"10":[0],"48":[0],"21":[0],"43":[0],"32":[0],"49":[0],"6":[0],"36":[0],"1":[0],"39":[0],"17":[0],"25":[0],"14":[0],"47":[0],"31":[0],"42":[0],"0":[0],"20":[0],"27":[0],"2":[0],"38":[0],"18":[0],"30":[0],"7":[0],"29":[0],"41":[0],"3":[0],"28":[0]}} for path /brokers/topics/__consumer_offsets (kafka.controller.PartitionStateMachine$PartitionModificationsListener)
[2017-06-28 12:10:00,735] INFO [AddPartitionsListener on Controller 0]: Partition modification triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/mariotest (kafka.controller.PartitionStateMachine$PartitionModificationsListener)
[2017-06-28 12:10:00,738] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:10:00,741] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: , deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:10:05,219] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 12:10:05,220] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 12:10:05,220] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 12:10:05,220] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 12:14:00,451] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:14:00,453] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:14:00,454] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:00,455] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:00,457] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:00,457] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:00,461] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:00,462] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:00,463] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:14:00,474] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":2,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:14:00,474] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:00,474] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:00,474] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:00,475] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:00,475] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:00,475] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:00,475] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:00,533] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:00,534] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:00,534] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:00,534] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:00,534] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:00,534] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:00,534] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:00,535] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:00,546] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:00,546] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:00,546] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:00,546] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:00,546] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:14:02,993] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:02,994] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:02,995] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:14:02,995] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:14:02,995] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:02,995] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:02,996] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:02,996] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:02,996] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:03,026] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:25,249] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:14:25,249] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:14:25,249] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:25,249] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:25,249] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:25,249] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:25,249] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:25,251] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:25,251] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:14:25,261] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:14:25,261] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:25,261] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:25,261] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:25,262] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:25,262] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:25,262] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:25,262] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:25,293] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:25,293] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:25,293] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:25,293] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:25,294] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:25,294] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:25,294] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:25,295] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:25,314] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:25,314] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:25,314] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:25,314] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:25,316] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:14:25,983] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:25,984] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:25,984] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:14:25,984] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:14:25,984] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:25,985] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:25,985] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:25,985] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:25,985] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:25,998] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:53,136] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:14:53,136] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:14:53,136] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:53,136] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:53,136] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:53,136] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:53,136] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:53,137] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:53,137] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:14:53,144] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:14:53,144] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:53,144] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:53,144] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:53,144] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:53,148] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:53,148] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:14:53,149] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:53,207] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:53,208] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:53,208] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:53,208] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:53,208] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:53,208] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:53,208] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:53,208] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:53,225] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:14:53,225] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:14:53,225] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:53,225] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:53,227] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:14:53,297] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:53,298] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:14:53,298] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:14:53,351] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:14:53,351] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:53,351] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:14:53,352] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:53,352] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:53,352] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:14:53,372] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:05,220] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 12:15:05,220] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 12:15:05,220] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 12:15:05,220] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 12:15:08,212] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mario,mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:15:08,214] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mario)], deleted topics: [Set()], new partition replica assignment [Map([mario,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:15:08,214] INFO [Controller 0]: New topic creation callback for [mario,0] (kafka.controller.KafkaController)
[2017-06-28 12:15:08,214] INFO [Controller 0]: New partition creation callback for [mario,0] (kafka.controller.KafkaController)
[2017-06-28 12:15:08,214] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mario,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:08,215] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:08,215] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mario,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:08,215] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mario,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:08,215] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mario,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:08,223] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:17,621] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:15:17,621] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:15:17,621] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:15:17,621] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:17,621] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:15:17,628] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:17,629] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:17,629] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:17,629] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:15:17,634] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:15:17,634] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:15:17,634] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:15:17,634] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:17,634] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:17,634] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:15:17,634] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:15:17,634] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:17,658] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:17,658] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:17,658] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:17,658] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:15:17,658] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:17,658] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:17,658] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:17,658] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:17,672] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:15:17,672] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:17,672] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mario,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:15:17,672] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:15:17,672] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:15:19,031] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mario,mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:15:19,032] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:15:19,032] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:15:19,032] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:15:19,032] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:19,032] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:19,032] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:19,032] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:19,032] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:19,043] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:25,166] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mario to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:15:25,166] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mario (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:15:25,166] INFO [delete-topics-thread-0], Handling deletion for topics mario (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:15:25,166] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mario deleted Map([Topic=mario,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:25,166] INFO [delete-topics-thread-0], Deletion of topic mario (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:15:25,166] INFO [Topic Deletion Manager 0], Topic deletion callback for mario (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:25,166] INFO [Topic Deletion Manager 0], Partition deletion callback for [mario,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:25,167] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:25,167] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mario,0]. (kafka.controller.KafkaController)
[2017-06-28 12:15:25,172] INFO [Controller 0]: New leader and ISR for partition [mario,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:15:25,172] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:15:25,172] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mario,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:15:25,173] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:25,173] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:25,173] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mario,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:15:25,173] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:15:25,173] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:25,180] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mario,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:25,180] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:25,180] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:25,180] INFO [delete-topics-thread-0], Handling deletion for topics mario (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:15:25,180] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mario deleted Map([Topic=mario,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:25,180] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:15:25,180] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mario,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:25,180] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mario,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:15:25,189] INFO [delete-topics-thread-0], Deletion of topic mario successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:15:25,189] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:15:25,189] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:15:25,189] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:15:25,190] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:16:40,776] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:16:40,776] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:16:40,776] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:16:40,776] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:16:40,777] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:16:40,777] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:16:40,778] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:16:40,779] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:16:40,781] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:16:40,802] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:16:40,802] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:16:40,803] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:16:40,803] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:16:40,803] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:16:40,805] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:16:40,805] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:16:40,805] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:16:40,834] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:16:40,834] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:16:40,834] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:16:40,834] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:16:40,834] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:16:40,835] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:16:40,835] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:16:40,836] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:16:40,846] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:16:40,846] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:16:40,846] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:16:40,846] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:16:40,847] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:16:40,906] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:16:40,907] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:16:40,907] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:16:40,911] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:16:40,911] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:16:40,911] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:16:40,912] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:16:40,912] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:16:40,912] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:16:40,925] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:19:02,541] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:19:02,541] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:19:02,541] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:19:02,541] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:19:02,541] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:19:02,541] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:19:02,542] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:19:02,542] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:19:02,542] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:19:02,546] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:19:02,546] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:19:02,546] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:19:02,546] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:19:02,546] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:19:02,546] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:19:02,546] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:19:02,547] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:19:02,559] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:19:02,559] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:19:02,559] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:19:02,560] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:19:02,560] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:19:02,560] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:19:02,560] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:19:02,560] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:19:02,569] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:19:02,569] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:19:02,569] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:19:02,569] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:19:02,570] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:19:02,805] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:19:02,806] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:19:02,806] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:19:02,806] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:19:02,806] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:19:02,806] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:19:02,807] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:19:02,807] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:19:02,807] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:19:02,813] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:20:05,220] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 12:20:05,221] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 12:20:05,221] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 12:20:05,222] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 12:20:56,338] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2017-06-28 12:20:56,351] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2017-06-28 12:20:56,352] INFO [Controller 0]: Initialized controller epoch to 82 and zk version 81 (kafka.controller.KafkaController)
[2017-06-28 12:20:56,356] INFO [Controller 0]: Controller 0 incremented epoch to 83 (kafka.controller.KafkaController)
[2017-06-28 12:20:56,356] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-28 12:20:56,590] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 12:20:56,591] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 12:20:56,591] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2017-06-28 12:20:56,595] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2017-06-28 12:20:56,595] INFO [Controller 0]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2017-06-28 12:20:56,596] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2017-06-28 12:20:56,602] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2017-06-28 12:20:56,602] INFO [Controller 0]: List of topics ineligible for deletion: __consumer_offsets,mariotest (kafka.controller.KafkaController)
[2017-06-28 12:20:56,605] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:20:56,606] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:20:56,606] INFO [Controller 0]: Current list of topics in the cluster: Set(mariotest, __consumer_offsets) (kafka.controller.KafkaController)
[2017-06-28 12:20:56,642] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=39,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=20,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=3,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=45,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=8,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=0] -> ReplicaDeletionIneligible, [Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=44,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=23,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=31,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=41,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=13,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=25,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=35,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:20:56,653] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,19]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,663] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,30]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,669] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,47]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,675] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,29]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,680] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,41]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,685] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,39]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,691] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,10]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,696] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,17]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,701] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,14]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,742] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,40]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,753] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,18]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,759] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,26]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,768] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,774] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,24]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,779] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,33]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,784] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,20]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,790] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,21]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,795] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,3]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,799] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,22]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,805] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,5]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,811] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,12]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,816] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,8]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,822] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,23]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,826] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,15]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,831] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,48]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,835] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,11]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,841] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,13]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,845] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,49]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,850] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,6]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,855] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,28]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,859] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,4]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,863] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,37]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,868] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,31]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,873] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,44]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,878] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,42]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,884] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,34]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,893] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,46]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,897] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,25]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,905] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,45]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,910] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,27]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,914] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,32]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,918] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,43]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,923] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,36]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,927] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,35]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,931] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,7]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,935] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,9]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,940] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,38]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,944] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [mariotest,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,950] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,954] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,958] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,16]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:56,960] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([__consumer_offsets,19] -> OfflinePartition, [__consumer_offsets,30] -> OfflinePartition, [__consumer_offsets,47] -> OfflinePartition, [__consumer_offsets,29] -> OfflinePartition, [__consumer_offsets,41] -> OfflinePartition, [__consumer_offsets,39] -> OfflinePartition, [__consumer_offsets,10] -> OfflinePartition, [__consumer_offsets,17] -> OfflinePartition, [__consumer_offsets,14] -> OfflinePartition, [__consumer_offsets,40] -> OfflinePartition, [__consumer_offsets,18] -> OfflinePartition, [__consumer_offsets,26] -> OfflinePartition, [__consumer_offsets,0] -> OfflinePartition, [__consumer_offsets,24] -> OfflinePartition, [__consumer_offsets,33] -> OfflinePartition, [__consumer_offsets,20] -> OfflinePartition, [__consumer_offsets,21] -> OfflinePartition, [__consumer_offsets,3] -> OfflinePartition, [__consumer_offsets,22] -> OfflinePartition, [__consumer_offsets,5] -> OfflinePartition, [__consumer_offsets,12] -> OfflinePartition, [__consumer_offsets,8] -> OfflinePartition, [__consumer_offsets,23] -> OfflinePartition, [__consumer_offsets,15] -> OfflinePartition, [__consumer_offsets,48] -> OfflinePartition, [__consumer_offsets,11] -> OfflinePartition, [__consumer_offsets,13] -> OfflinePartition, [__consumer_offsets,49] -> OfflinePartition, [__consumer_offsets,6] -> OfflinePartition, [__consumer_offsets,28] -> OfflinePartition, [__consumer_offsets,4] -> OfflinePartition, [__consumer_offsets,37] -> OfflinePartition, [__consumer_offsets,31] -> OfflinePartition, [__consumer_offsets,44] -> OfflinePartition, [__consumer_offsets,42] -> OfflinePartition, [__consumer_offsets,34] -> OfflinePartition, [__consumer_offsets,46] -> OfflinePartition, [__consumer_offsets,25] -> OfflinePartition, [__consumer_offsets,45] -> OfflinePartition, [__consumer_offsets,27] -> OfflinePartition, [__consumer_offsets,32] -> OfflinePartition, [__consumer_offsets,43] -> OfflinePartition, [__consumer_offsets,36] -> OfflinePartition, [__consumer_offsets,35] -> OfflinePartition, [__consumer_offsets,7] -> OfflinePartition, [__consumer_offsets,9] -> OfflinePartition, [__consumer_offsets,38] -> OfflinePartition, [mariotest,0] -> OfflinePartition, [__consumer_offsets,1] -> OfflinePartition, [__consumer_offsets,2] -> OfflinePartition, [__consumer_offsets,16] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:56,963] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 83 (kafka.controller.KafkaController)
[2017-06-28 12:20:56,964] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2017-06-28 12:20:56,965] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:56,968] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2017-06-28 12:20:56,969] INFO [delete-topics-thread-0], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:20:56,970] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2017-06-28 12:20:56,970] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:20:57,080] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:20:57,102] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:20:57,113] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2017-06-28 12:20:57,123] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-06-28 12:20:57,124] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2017-06-28 12:20:57,131] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=__consumer_offsets,Partition=12,Replica=0],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=__consumer_offsets,Partition=35,Replica=0],[Topic=__consumer_offsets,Partition=9,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=__consumer_offsets,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=11,Replica=0],[Topic=__consumer_offsets,Partition=29,Replica=0],[Topic=__consumer_offsets,Partition=30,Replica=0],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=42,Replica=0],[Topic=__consumer_offsets,Partition=26,Replica=0],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=17,Replica=0],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=27,Replica=0],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=41,Replica=0],[Topic=__consumer_offsets,Partition=20,Replica=0],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=39,Replica=0],[Topic=__consumer_offsets,Partition=47,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=24,Replica=0],[Topic=__consumer_offsets,Partition=6,Replica=0],[Topic=__consumer_offsets,Partition=36,Replica=0],[Topic=__consumer_offsets,Partition=8,Replica=0],[Topic=__consumer_offsets,Partition=38,Replica=0],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=21,Replica=0],[Topic=__consumer_offsets,Partition=18,Replica=0],[Topic=__consumer_offsets,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=48,Replica=0],[Topic=__consumer_offsets,Partition=5,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=mariotest,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=3,Replica=0],[Topic=__consumer_offsets,Partition=44,Replica=0],[Topic=__consumer_offsets,Partition=15,Replica=0],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=0],[Topic=__consumer_offsets,Partition=33,Replica=0],[Topic=__consumer_offsets,Partition=45,Replica=0],[Topic=__consumer_offsets,Partition=23,Replica=0],[Topic=__consumer_offsets,Partition=32,Replica=0],[Topic=__consumer_offsets,Partition=14,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:20:57,134] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to alarcj-ThinkPad-T460s:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-28 12:20:57,153] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,19]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,153] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,19] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,163] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,167] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,30]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,167] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,30] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,169] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,171] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,47]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,171] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,47] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,174] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,176] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,29]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,176] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,29] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,179] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,180] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,41]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,180] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,41] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,193] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,196] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,39]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,196] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,39] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,199] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,204] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,10]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,204] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,10] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,207] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,209] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,17]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,209] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,17] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,212] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,220] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,14]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,220] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,14] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,223] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,225] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,40]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,225] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,40] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,228] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,229] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,18]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,230] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,18] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,232] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,234] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,26]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,234] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,26] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,236] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,238] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,239] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,242] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,247] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,24]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,247] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,24] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,253] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,255] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,33]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,255] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,33] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,257] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,259] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,20]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,259] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,20] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,263] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,265] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,21]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,265] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,21] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,271] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,277] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,3]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,277] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,3] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,279] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,281] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,22]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,281] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,22] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,284] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,287] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,5]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,288] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,5] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,290] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,293] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,12]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,293] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,12] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,297] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,299] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,8]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,299] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,8] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,302] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,303] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,23]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,304] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,23] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,306] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,309] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,15]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,309] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,15] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,311] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,322] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,48]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,322] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,48] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,324] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,326] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,11]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,326] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,11] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,329] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,330] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,13]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,331] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,13] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,335] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,339] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,49]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,340] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,49] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,342] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,344] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,6]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,344] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,6] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,347] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,348] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,28]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,348] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,28] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,351] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,353] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,4]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,353] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,4] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,355] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,357] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,37]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,357] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,37] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,359] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,363] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,31]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,363] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,31] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,366] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,368] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,44]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,368] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,44] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,374] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,376] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,42]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,376] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,42] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,379] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,382] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,34]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,382] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,34] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,385] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,387] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,46]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,387] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,46] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,389] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,390] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,25]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,390] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,25] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,392] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,394] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,45]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,394] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,45] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,400] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,403] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,27]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,403] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,27] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,406] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,411] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,32]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,411] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,32] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,414] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,416] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,43]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,416] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,43] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,419] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,423] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,36]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,423] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,36] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,426] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,428] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,35]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,429] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,35] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,431] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,433] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,7]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,433] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,7] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,436] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,440] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,9]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,440] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,9] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,450] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,453] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,38]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,454] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,38] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,456] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:82), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,458] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [mariotest,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,458] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [mariotest,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,461] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:83), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,464] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,464] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,469] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:83), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,475] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,475] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,479] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:83), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:80,ControllerEpoch:82)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:20:57,481] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,16]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,481] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":81,"isr":[0]} for offline partition [__consumer_offsets,16] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 12:20:57,484] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:83), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:81,ControllerEpoch:83)) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:01,969] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 12:21:01,971] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 12:21:01,973] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 12:21:01,981] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 12:21:15,457] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mario,mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:21:15,459] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mario)], deleted topics: [Set()], new partition replica assignment [Map([mario,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:21:15,460] INFO [Controller 0]: New topic creation callback for [mario,0] (kafka.controller.KafkaController)
[2017-06-28 12:21:15,461] INFO [Controller 0]: New partition creation callback for [mario,0] (kafka.controller.KafkaController)
[2017-06-28 12:21:15,461] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mario,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:15,463] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:15,464] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mario,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:15,464] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mario,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:15,465] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mario,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:83) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:15,477] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:38,760] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:21:38,760] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:21:38,762] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:21:38,765] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:38,767] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:21:38,768] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:38,769] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:38,772] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:38,774] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:21:38,779] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":2,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:21:38,781] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:21:38,782] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:21:38,786] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:38,794] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:38,796] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:21:38,796] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:21:38,796] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:38,822] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:38,824] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:38,824] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:38,824] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:21:38,824] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:38,824] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:38,825] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:38,826] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:38,838] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:21:38,838] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:38,838] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mario,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:21:38,838] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:21:38,839] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:21:39,280] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mario,mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:21:39,281] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:21:39,281] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:21:39,283] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:21:39,283] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:39,283] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:39,284] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:39,284] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:39,284] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:83) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:39,291] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:42,299] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mario to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:21:42,299] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mario (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:21:42,301] INFO [delete-topics-thread-0], Handling deletion for topics mario (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:21:42,301] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mario deleted Map([Topic=mario,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:42,301] INFO [delete-topics-thread-0], Deletion of topic mario (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:21:42,301] INFO [Topic Deletion Manager 0], Topic deletion callback for mario (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:42,302] INFO [Topic Deletion Manager 0], Partition deletion callback for [mario,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:42,304] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:42,304] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mario,0]. (kafka.controller.KafkaController)
[2017-06-28 12:21:42,313] INFO [Controller 0]: New leader and ISR for partition [mario,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:21:42,313] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:21:42,313] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mario,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:21:42,313] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:42,313] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:42,314] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mario,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:21:42,314] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:21:42,314] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:42,321] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mario,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:42,321] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:42,321] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:42,321] INFO [delete-topics-thread-0], Handling deletion for topics mario (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:21:42,321] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mario deleted Map([Topic=mario,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:42,321] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mario,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:21:42,322] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mario,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:42,322] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mario,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:21:42,331] INFO [delete-topics-thread-0], Deletion of topic mario successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:21:42,331] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:21:42,331] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:21:42,331] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:21:42,332] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:22:41,278] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2017-06-28 12:22:42,920] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2017-06-28 12:22:42,939] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2017-06-28 12:22:42,947] INFO [Controller 0]: Controller 0 incremented epoch to 1 (kafka.controller.KafkaController)
[2017-06-28 12:22:42,949] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-28 12:22:42,968] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 12:22:42,968] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 12:22:42,969] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2017-06-28 12:22:42,972] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2017-06-28 12:22:42,973] INFO [Controller 0]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2017-06-28 12:22:42,974] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2017-06-28 12:22:42,977] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2017-06-28 12:22:42,977] INFO [Controller 0]: List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2017-06-28 12:22:42,980] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:22:42,980] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:22:42,981] INFO [Controller 0]: Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:22:43,003] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:22:43,004] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2017-06-28 12:22:43,005] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2017-06-28 12:22:43,006] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2017-06-28 12:22:43,007] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2017-06-28 12:22:43,011] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2017-06-28 12:22:43,012] INFO [delete-topics-thread-0], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:22:43,012] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2017-06-28 12:22:43,013] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:22:43,128] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:22:43,155] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:22:43,156] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2017-06-28 12:22:43,163] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-06-28 12:22:43,164] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2017-06-28 12:22:43,170] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to alarcj-ThinkPad-T460s:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-28 12:22:45,801] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:22:45,813] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:22:45,814] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:22:45,819] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:22:45,820] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:22:45,824] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:22:45,828] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:22:45,830] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:22:45,831] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:22:45,848] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:22:48,013] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 12:22:48,019] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([mariotest,0] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 12:22:48,026] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 12:22:48,029] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 12:23:31,704] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:23:31,705] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:23:31,707] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:23:31,710] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:31,711] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:23:31,712] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:31,713] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:31,716] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:31,719] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:23:31,733] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:23:31,735] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:23:31,736] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:23:31,740] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:31,741] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:31,744] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:23:31,744] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:23:31,744] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:31,800] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:31,808] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:31,808] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:31,810] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:23:31,811] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:31,811] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:31,817] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:31,819] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:31,861] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:23:31,861] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:31,861] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children  (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:23:31,862] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:23:31,863] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:23:32,089] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:23:32,091] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:23:32,091] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:23:32,093] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:23:32,093] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:32,093] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:32,094] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:32,094] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:32,094] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:32,105] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:51,721] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:23:51,721] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:23:51,721] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:23:51,721] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:51,722] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:23:51,722] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:51,722] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:51,722] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:51,722] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:23:51,737] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:23:51,738] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:23:51,738] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:23:51,738] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:51,738] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:51,738] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:23:51,739] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:23:51,739] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:51,765] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:51,765] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:51,765] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:51,765] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:23:51,766] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:51,766] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:51,766] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:51,766] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:51,774] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:23:51,774] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:23:51,774] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children  (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:23:51,775] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:23:51,775] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:23:52,439] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:23:52,441] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:23:52,441] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:23:52,441] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:23:52,441] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:52,442] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:23:52,443] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:52,443] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:52,443] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:23:52,452] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:24:35,796] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:24:35,796] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:24:35,796] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:24:35,796] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:24:35,797] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:24:35,797] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:24:35,797] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:24:35,797] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:24:35,797] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:24:35,811] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:24:35,812] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:24:35,812] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:24:35,812] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:24:35,812] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:24:35,812] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:24:35,812] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:24:35,812] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:24:35,838] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:24:35,839] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:24:35,839] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:24:35,839] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:24:35,839] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:24:35,839] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:24:35,839] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:24:35,839] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:24:35,849] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:24:35,849] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:24:35,849] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children  (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:24:35,849] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:24:35,850] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:24:36,761] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:24:36,763] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:24:36,763] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:24:36,764] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:24:36,764] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:24:36,764] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:24:36,765] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:24:36,765] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:24:36,765] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:24:36,772] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:26:23,382] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:26:23,382] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:26:23,382] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:26:23,382] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:26:23,382] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:26:23,382] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:26:23,383] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:26:23,383] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:26:23,383] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:26:23,392] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:26:23,392] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:26:23,392] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:26:23,392] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:26:23,392] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:26:23,392] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:26:23,393] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:26:23,393] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:26:23,403] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:26:23,403] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:26:23,403] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:26:23,404] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:26:23,404] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:26:23,404] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:26:23,404] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:26:23,404] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:26:23,416] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:26:23,416] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children  (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:26:23,416] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:26:23,416] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:26:23,418] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:26:24,038] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:26:24,039] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:26:24,039] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:26:24,040] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:26:24,040] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:26:24,040] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:26:24,041] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:26:24,041] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:26:24,041] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:26:24,049] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:27:48,012] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 12:27:48,012] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([mariotest,0] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 12:27:48,012] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 12:27:48,012] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 12:30:32,013] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:30:32,013] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:30:32,013] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:30:32,013] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:32,013] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:30:32,013] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:32,014] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:32,014] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:32,014] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:30:32,023] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:30:32,023] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:30:32,023] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:30:32,023] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:32,024] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:32,024] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:30:32,024] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:30:32,024] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:32,045] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:32,045] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:32,045] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:32,045] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:30:32,045] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:32,045] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:32,045] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:32,046] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:32,063] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:30:32,063] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:32,063] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children  (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:30:32,063] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:30:32,064] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:30:34,207] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:30:34,209] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:30:34,209] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:30:34,210] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:30:34,210] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:34,210] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:34,211] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:34,211] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:34,211] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:34,219] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:40,810] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:30:40,810] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:30:40,810] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:30:40,810] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:40,810] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:30:40,810] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:40,810] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:40,810] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:40,810] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:30:40,818] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:30:40,818] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:30:40,818] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:30:40,821] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:40,821] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:40,821] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:30:40,821] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:30:40,822] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:40,838] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:40,838] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:40,838] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:40,838] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:30:40,838] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:40,838] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:40,838] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:40,839] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:40,853] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:30:40,853] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:30:40,854] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children  (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:30:40,854] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:30:40,854] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:30:43,097] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:30:43,099] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:30:43,099] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:30:43,102] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:30:43,102] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:43,102] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:30:43,103] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:43,103] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:43,103] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:30:43,122] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:32:17,199] INFO [Controller 0]: Shutting down broker 0 (kafka.controller.KafkaController)
[2017-06-28 12:32:17,200] DEBUG [Controller 0]: All shutting down brokers: 0 (kafka.controller.KafkaController)
[2017-06-28 12:32:17,201] DEBUG [Controller 0]: Live brokers:  (kafka.controller.KafkaController)
[2017-06-28 12:32:17,204] TRACE [Controller 0]: All leaders = [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2017-06-28 12:32:19,094] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2017-06-28 12:32:19,095] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-28 12:32:19,095] INFO [delete-topics-thread-0], Shutting down (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:32:19,095] INFO [delete-topics-thread-0], Stopped  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:32:19,095] INFO [delete-topics-thread-0], Shutdown completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:32:19,097] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2017-06-28 12:32:19,097] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:32:19,098] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2017-06-28 12:32:19,102] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2017-06-28 12:32:19,103] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2017-06-28 12:32:19,103] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2017-06-28 12:35:14,254] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2017-06-28 12:35:14,270] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2017-06-28 12:35:14,271] INFO [Controller 0]: Initialized controller epoch to 1 and zk version 0 (kafka.controller.KafkaController)
[2017-06-28 12:35:14,274] INFO [Controller 0]: Controller 0 incremented epoch to 2 (kafka.controller.KafkaController)
[2017-06-28 12:35:14,275] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-28 12:35:14,298] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 12:35:14,298] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 12:35:14,298] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2017-06-28 12:35:14,301] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2017-06-28 12:35:14,301] INFO [Controller 0]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2017-06-28 12:35:14,302] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2017-06-28 12:35:14,305] INFO [Controller 0]: List of topics to be deleted: mariotest (kafka.controller.KafkaController)
[2017-06-28 12:35:14,306] INFO [Controller 0]: List of topics ineligible for deletion: mariotest (kafka.controller.KafkaController)
[2017-06-28 12:35:14,308] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:35:14,308] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:35:14,309] INFO [Controller 0]: Current list of topics in the cluster: Set(mariotest) (kafka.controller.KafkaController)
[2017-06-28 12:35:14,327] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:14,329] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([mariotest,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:35:14,331] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2017-06-28 12:35:14,332] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2017-06-28 12:35:14,333] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2017-06-28 12:35:14,337] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2017-06-28 12:35:14,343] INFO [delete-topics-thread-0], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:35:14,343] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2017-06-28 12:35:14,365] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:35:14,370] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:14,373] INFO [Topic Deletion Manager 0], Retrying delete topic for topic mariotest since replicas [Topic=mariotest,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2017-06-28 12:35:14,373] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:14,377] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:35:14,390] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:35:14,392] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:35:14,392] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:35:14,396] WARN [Channel manager on controller 0]: Not sending request (type=StopReplicaRequest, controllerId=0, controllerEpoch=2, deletePartitions=false, partitions=mariotest-0) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-28 12:35:14,397] INFO [delete-topics-thread-0], Not retrying deletion of topic mariotest at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:35:14,397] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:35:14,427] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:35:14,443] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:35:14,443] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2017-06-28 12:35:14,451] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-06-28 12:35:14,451] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2017-06-28 12:35:14,454] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:14,458] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to alarcj-ThinkPad-T460s:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-28 12:35:14,461] INFO [Controller 0]: Some replicas [Topic=mariotest,Partition=0,Replica=0] for topics scheduled for deletion mariotest are on the newly restarted brokers 0. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2017-06-28 12:35:14,463] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:35:14,463] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:14,464] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:35:14,464] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:35:14,469] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:35:14,470] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:14,471] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:35:14,477] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [mariotest,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2017-06-28 12:35:14,480] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:35:14,480] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:35:14,495] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:35:14,496] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:14,497] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:35:14,497] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:35:14,497] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:35:14,603] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:35:14,605] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:35:14,605] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:14,606] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:35:14,606] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:14,606] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:14,607] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:35:14,608] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:35:14,620] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:35:14,620] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:35:14,620] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children  (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:35:14,621] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:35:14,622] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:35:19,338] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 12:35:19,342] DEBUG [Controller 0]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2017-06-28 12:35:42,555] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:35:42,558] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:35:42,558] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:35:42,561] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:35:42,561] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:35:42,562] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:35:42,564] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:35:42,565] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:35:42,565] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:35:42,574] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:37:16,601] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:37:16,602] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:37:16,604] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:37:16,605] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:37:16,605] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:37:16,605] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:37:16,606] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:37:16,606] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:37:16,606] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:37:16,628] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:37:16,628] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:37:16,628] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:37:16,628] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:37:16,628] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:37:16,629] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:37:16,629] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:37:16,629] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:37:16,686] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:37:16,686] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:37:16,687] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:37:16,687] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:37:16,687] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:37:16,687] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:37:16,687] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:37:16,688] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:37:16,696] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:37:16,696] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:37:16,696] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children  (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:37:16,696] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:37:16,696] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:37:16,766] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:37:16,767] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:37:16,767] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:37:16,768] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:37:16,768] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:37:16,768] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:37:16,769] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:37:16,769] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:37:16,769] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:37:16,777] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:37:26,359] INFO [Controller 0]: Shutting down broker 0 (kafka.controller.KafkaController)
[2017-06-28 12:37:26,360] DEBUG [Controller 0]: All shutting down brokers: 0 (kafka.controller.KafkaController)
[2017-06-28 12:37:26,360] DEBUG [Controller 0]: Live brokers:  (kafka.controller.KafkaController)
[2017-06-28 12:37:26,363] TRACE [Controller 0]: All leaders = [mariotest,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.KafkaController)
[2017-06-28 12:37:28,546] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2017-06-28 12:37:28,547] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-28 12:37:28,547] INFO [delete-topics-thread-0], Shutting down (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:37:28,547] INFO [delete-topics-thread-0], Stopped  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:37:28,547] INFO [delete-topics-thread-0], Shutdown completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:37:28,548] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2017-06-28 12:37:28,549] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:37:28,549] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2017-06-28 12:37:28,549] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2017-06-28 12:37:28,549] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2017-06-28 12:37:28,550] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2017-06-28 12:39:22,702] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2017-06-28 12:39:22,729] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2017-06-28 12:39:22,730] INFO [Controller 0]: Initialized controller epoch to 2 and zk version 1 (kafka.controller.KafkaController)
[2017-06-28 12:39:22,733] INFO [Controller 0]: Controller 0 incremented epoch to 3 (kafka.controller.KafkaController)
[2017-06-28 12:39:22,734] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-28 12:39:22,764] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 12:39:22,765] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 12:39:22,765] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2017-06-28 12:39:22,768] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2017-06-28 12:39:22,768] INFO [Controller 0]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2017-06-28 12:39:22,769] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2017-06-28 12:39:22,772] INFO [Controller 0]: List of topics to be deleted: mariotest (kafka.controller.KafkaController)
[2017-06-28 12:39:22,772] INFO [Controller 0]: List of topics ineligible for deletion: mariotest (kafka.controller.KafkaController)
[2017-06-28 12:39:22,774] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:39:22,774] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 12:39:22,775] INFO [Controller 0]: Current list of topics in the cluster: Set(mariotest) (kafka.controller.KafkaController)
[2017-06-28 12:39:22,796] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:22,798] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([mariotest,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:39:22,800] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2017-06-28 12:39:22,801] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2017-06-28 12:39:22,802] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2017-06-28 12:39:22,805] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2017-06-28 12:39:22,806] INFO [delete-topics-thread-0], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:39:22,806] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2017-06-28 12:39:22,817] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:39:22,826] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:22,831] INFO [Topic Deletion Manager 0], Retrying delete topic for topic mariotest since replicas [Topic=mariotest,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2017-06-28 12:39:22,831] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:22,835] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:39:22,851] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 12:39:22,852] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:39:22,852] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:39:22,854] WARN [Channel manager on controller 0]: Not sending request (type=StopReplicaRequest, controllerId=0, controllerEpoch=3, deletePartitions=false, partitions=mariotest-0) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-28 12:39:22,855] INFO [delete-topics-thread-0], Not retrying deletion of topic mariotest at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:39:22,855] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:39:22,876] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:39:22,895] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 12:39:22,895] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2017-06-28 12:39:22,905] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-06-28 12:39:22,905] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2017-06-28 12:39:22,908] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:22,917] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to alarcj-ThinkPad-T460s:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-28 12:39:22,918] INFO [Controller 0]: Some replicas [Topic=mariotest,Partition=0,Replica=0] for topics scheduled for deletion mariotest are on the newly restarted brokers 0. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2017-06-28 12:39:22,920] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:39:22,920] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:22,921] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:39:22,921] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 12:39:22,929] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:39:22,933] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:22,933] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 12:39:22,938] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [mariotest,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2017-06-28 12:39:22,938] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:39:22,938] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:39:22,939] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:39:22,939] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:22,958] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:39:22,958] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 12:39:22,964] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:39:23,048] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 12:39:23,050] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 12:39:23,050] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:23,051] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:39:23,051] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:23,051] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:23,052] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:39:23,053] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:39:23,078] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 12:39:23,078] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 12:39:23,079] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children  (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:39:23,080] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:39:23,081] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 12:39:27,806] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 12:39:27,811] DEBUG [Controller 0]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2017-06-28 12:39:35,974] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:39:35,980] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 12:39:35,980] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:39:35,984] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 12:39:35,984] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:39:35,985] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 12:39:35,986] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:39:35,987] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 12:39:35,987] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:3) (kafka.controller.PartitionStateMachine)
[2017-06-28 12:39:35,998] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
