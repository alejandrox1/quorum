[2017-06-28 11:02:06,211] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 11:02:06,220] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 11:02:06,221] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 11:02:06,222] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 11:04:12,340] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 11:04:12,383] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 11:04:12,392] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:04:12,396] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:12,399] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:04:12,399] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:12,410] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:12,421] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to alarcj-ThinkPad-T460s:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-28 11:04:12,427] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:12,428] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 11:04:12,485] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":5,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 11:04:12,486] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:04:12,486] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:04:12,487] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:12,487] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:12,488] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:04:12,489] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:04:12,492] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:12,587] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:12,588] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:12,588] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:12,589] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:04:12,589] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:12,589] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:12,589] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:12,594] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:12,632] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:04:12,632] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:12,632] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:04:12,633] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:04:12,634] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 11:04:13,452] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:04:13,453] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:04:13,453] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 11:04:13,453] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 11:04:13,453] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:13,454] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:13,454] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:13,454] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:13,454] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:80) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:13,464] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:36,952] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 11:04:36,952] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 11:04:36,952] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:04:36,952] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:36,952] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:04:36,952] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:36,953] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:36,954] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:36,954] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 11:04:36,981] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 11:04:36,981] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:04:36,981] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:04:36,982] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:36,982] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:36,982] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:04:36,982] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:04:36,982] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:37,005] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:37,005] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:37,006] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:37,006] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:04:37,006] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:37,006] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:37,006] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:37,006] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:37,013] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:04:37,013] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 11:04:37,013] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:04:37,014] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:04:37,015] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 11:04:38,730] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:04:38,740] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:04:38,740] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 11:04:38,741] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 11:04:38,741] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:38,741] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:04:38,741] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:38,741] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:38,742] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:80) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:04:38,750] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:32,284] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2017-06-28 11:16:32,318] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2017-06-28 11:16:32,320] INFO [Controller 0]: Initialized controller epoch to 80 and zk version 79 (kafka.controller.KafkaController)
[2017-06-28 11:16:32,324] INFO [Controller 0]: Controller 0 incremented epoch to 81 (kafka.controller.KafkaController)
[2017-06-28 11:16:32,328] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-06-28 11:16:32,656] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 11:16:32,656] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2017-06-28 11:16:32,657] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2017-06-28 11:16:32,662] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2017-06-28 11:16:32,663] INFO [Controller 0]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2017-06-28 11:16:32,664] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2017-06-28 11:16:32,670] INFO [Controller 0]: List of topics to be deleted: mariotest (kafka.controller.KafkaController)
[2017-06-28 11:16:32,671] INFO [Controller 0]: List of topics ineligible for deletion: __consumer_offsets,mariotest (kafka.controller.KafkaController)
[2017-06-28 11:16:32,676] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 11:16:32,676] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-06-28 11:16:32,677] INFO [Controller 0]: Current list of topics in the cluster: Set(mariotest, __consumer_offsets) (kafka.controller.KafkaController)
[2017-06-28 11:16:32,752] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=39,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=20,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=3,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=45,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=8,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=0] -> ReplicaDeletionIneligible, [Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=44,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=23,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=31,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=41,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=13,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=25,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=35,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:32,766] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,19]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,781] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,30]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,787] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,47]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,794] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,29]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,800] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,41]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,844] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,39]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,855] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,10]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,870] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,17]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,890] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,14]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,906] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,40]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,915] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,18]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,922] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,26]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,936] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,946] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,24]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,954] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,33]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,961] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,20]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,966] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,21]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,974] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,3]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,989] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,22]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:32,999] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,5]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,010] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,12]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,020] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,8]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,026] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,23]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,030] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,15]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,036] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,48]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,042] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,11]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,056] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,13]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,097] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,49]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,102] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,6]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,106] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,28]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,113] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,4]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,116] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,37]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,120] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,31]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,134] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,44]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,148] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,42]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,153] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,34]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,163] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,46]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,171] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,25]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,176] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,45]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,181] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,27]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,188] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,32]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,195] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,43]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,199] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,36]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,203] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,35]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,214] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,7]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,219] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,9]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,223] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,38]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,237] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,240] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,245] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,16]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,250] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([__consumer_offsets,19] -> OfflinePartition, [__consumer_offsets,30] -> OfflinePartition, [__consumer_offsets,47] -> OfflinePartition, [__consumer_offsets,29] -> OfflinePartition, [__consumer_offsets,41] -> OfflinePartition, [__consumer_offsets,39] -> OfflinePartition, [__consumer_offsets,10] -> OfflinePartition, [__consumer_offsets,17] -> OfflinePartition, [__consumer_offsets,14] -> OfflinePartition, [__consumer_offsets,40] -> OfflinePartition, [__consumer_offsets,18] -> OfflinePartition, [__consumer_offsets,26] -> OfflinePartition, [__consumer_offsets,0] -> OfflinePartition, [__consumer_offsets,24] -> OfflinePartition, [__consumer_offsets,33] -> OfflinePartition, [__consumer_offsets,20] -> OfflinePartition, [__consumer_offsets,21] -> OfflinePartition, [__consumer_offsets,3] -> OfflinePartition, [__consumer_offsets,22] -> OfflinePartition, [__consumer_offsets,5] -> OfflinePartition, [__consumer_offsets,12] -> OfflinePartition, [__consumer_offsets,8] -> OfflinePartition, [__consumer_offsets,23] -> OfflinePartition, [__consumer_offsets,15] -> OfflinePartition, [__consumer_offsets,48] -> OfflinePartition, [__consumer_offsets,11] -> OfflinePartition, [__consumer_offsets,13] -> OfflinePartition, [__consumer_offsets,49] -> OfflinePartition, [__consumer_offsets,6] -> OfflinePartition, [__consumer_offsets,28] -> OfflinePartition, [__consumer_offsets,4] -> OfflinePartition, [__consumer_offsets,37] -> OfflinePartition, [__consumer_offsets,31] -> OfflinePartition, [__consumer_offsets,44] -> OfflinePartition, [__consumer_offsets,42] -> OfflinePartition, [__consumer_offsets,34] -> OfflinePartition, [__consumer_offsets,46] -> OfflinePartition, [__consumer_offsets,25] -> OfflinePartition, [__consumer_offsets,45] -> OfflinePartition, [__consumer_offsets,27] -> OfflinePartition, [__consumer_offsets,32] -> OfflinePartition, [__consumer_offsets,43] -> OfflinePartition, [__consumer_offsets,36] -> OfflinePartition, [__consumer_offsets,35] -> OfflinePartition, [__consumer_offsets,7] -> OfflinePartition, [__consumer_offsets,9] -> OfflinePartition, [__consumer_offsets,38] -> OfflinePartition, [mariotest,0] -> OfflinePartition, [__consumer_offsets,1] -> OfflinePartition, [__consumer_offsets,2] -> OfflinePartition, [__consumer_offsets,16] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,253] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 81 (kafka.controller.KafkaController)
[2017-06-28 11:16:33,253] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2017-06-28 11:16:33,254] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,262] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2017-06-28 11:16:33,263] INFO [delete-topics-thread-0], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:16:33,263] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2017-06-28 11:16:33,267] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:16:33,272] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:33,278] INFO [Topic Deletion Manager 0], Retrying delete topic for topic mariotest since replicas [Topic=mariotest,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2017-06-28 11:16:33,279] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:33,285] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 11:16:33,311] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 11:16:33,316] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:16:33,316] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:16:33,320] WARN [Channel manager on controller 0]: Not sending request (type=StopReplicaRequest, controllerId=0, controllerEpoch=81, deletePartitions=false, partitions=mariotest-0) to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2017-06-28 11:16:33,321] INFO [delete-topics-thread-0], Not retrying deletion of topic mariotest at this time since it is marked ineligible for deletion (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:16:33,321] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 11:16:33,432] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 11:16:33,487] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-06-28 11:16:33,488] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2017-06-28 11:16:33,519] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2017-06-28 11:16:33,528] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-06-28 11:16:33,529] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=__consumer_offsets,Partition=12,Replica=0],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=__consumer_offsets,Partition=35,Replica=0],[Topic=__consumer_offsets,Partition=9,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=__consumer_offsets,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=11,Replica=0],[Topic=__consumer_offsets,Partition=29,Replica=0],[Topic=__consumer_offsets,Partition=30,Replica=0],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=42,Replica=0],[Topic=__consumer_offsets,Partition=26,Replica=0],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=17,Replica=0],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=27,Replica=0],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=41,Replica=0],[Topic=__consumer_offsets,Partition=20,Replica=0],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=39,Replica=0],[Topic=__consumer_offsets,Partition=47,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=24,Replica=0],[Topic=__consumer_offsets,Partition=6,Replica=0],[Topic=__consumer_offsets,Partition=36,Replica=0],[Topic=__consumer_offsets,Partition=8,Replica=0],[Topic=__consumer_offsets,Partition=38,Replica=0],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=21,Replica=0],[Topic=__consumer_offsets,Partition=18,Replica=0],[Topic=__consumer_offsets,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=48,Replica=0],[Topic=__consumer_offsets,Partition=5,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=mariotest,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=3,Replica=0],[Topic=__consumer_offsets,Partition=44,Replica=0],[Topic=__consumer_offsets,Partition=15,Replica=0],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=0],[Topic=__consumer_offsets,Partition=33,Replica=0],[Topic=__consumer_offsets,Partition=45,Replica=0],[Topic=__consumer_offsets,Partition=23,Replica=0],[Topic=__consumer_offsets,Partition=32,Replica=0],[Topic=__consumer_offsets,Partition=14,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:33,552] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to alarcj-ThinkPad-T460s:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-28 11:16:33,588] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,19]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,589] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,19] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,599] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,601] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,30]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,601] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,30] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,640] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,642] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,47]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,642] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,47] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,661] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,666] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,29]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,666] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,29] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,674] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,677] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,41]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,677] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,41] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,687] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,689] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,39]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,689] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,39] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,698] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,700] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,10]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,701] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,10] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,706] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,711] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,17]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,711] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,17] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,716] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,718] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,14]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,718] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,14] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,724] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,726] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,40]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,727] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,40] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,732] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,734] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,18]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,734] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,18] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,741] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,750] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,26]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,750] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,26] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,755] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,759] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,759] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,763] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,765] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,24]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,765] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,24] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,768] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,771] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,33]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,772] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,33] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,776] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,778] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,20]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,778] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,20] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,781] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,784] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,21]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,784] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,21] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,787] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,789] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,3]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,789] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,3] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,793] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,796] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,22]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,796] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,22] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,800] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,803] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,5]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,803] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,5] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,806] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,809] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,12]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,810] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,12] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,814] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,817] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,8]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,817] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,8] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,821] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,823] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,23]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,823] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,23] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,826] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,829] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,15]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,829] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,15] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,833] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,836] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,48]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,836] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,48] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,839] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,844] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,11]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,844] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,11] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,847] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,848] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,13]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,848] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,13] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,852] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,854] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,49]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,854] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,49] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,858] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,861] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,6]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,861] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,6] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,866] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,868] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,28]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,868] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,28] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,872] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,874] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,4]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,874] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,4] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,877] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,880] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,37]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,880] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,37] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,887] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,889] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,31]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,889] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,31] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,892] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,904] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,44]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,904] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,44] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,911] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,913] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,42]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,913] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,42] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,919] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,920] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,34]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,921] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,34] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,923] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,925] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,46]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,925] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,46] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,929] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,931] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,25]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,931] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,25] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,935] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,938] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,45]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,938] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,45] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,942] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,946] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,27]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,946] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,27] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,949] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,952] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,32]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,952] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,32] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,957] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,959] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,43]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,959] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,43] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,968] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,970] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,36]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,970] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,36] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,974] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,980] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,35]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,980] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,35] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,988] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:33,989] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,7]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,989] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,7] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:33,993] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:34,001] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,9]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:34,001] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,9] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:34,005] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:34,007] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,38]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:34,007] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,38] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:34,010] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:34,013] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:34,014] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:34,020] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:34,025] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:34,025] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:34,027] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:78,ControllerEpoch:80)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:34,029] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,16]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:34,029] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":79,"isr":[0]} for offline partition [__consumer_offsets,16] (kafka.controller.OfflinePartitionLeaderSelector)
[2017-06-28 11:16:34,032] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,10] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,40] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,22] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,13] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,49] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,28] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,4] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,37] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,31] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,34] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,46] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,25] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,43] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,7] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [mariotest,0] -> (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:81), [__consumer_offsets,1] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81), [__consumer_offsets,16] -> (Leader:0,ISR:0,LeaderEpoch:79,ControllerEpoch:81)) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:34,040] INFO [Controller 0]: Some replicas [Topic=mariotest,Partition=0,Replica=0] for topics scheduled for deletion mariotest are on the newly restarted brokers 0. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2017-06-28 11:16:34,045] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:16:34,045] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:34,046] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:16:34,047] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 11:16:34,051] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:16:34,054] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:34,054] DEBUG [Controller 0]: Removing replica 0 from ISR  for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 11:16:34,056] WARN [Controller 0]: Cannot remove replica 0 from ISR of partition [mariotest,0] since it is not in the ISR. Leader = -1 ; ISR = List() (kafka.controller.KafkaController)
[2017-06-28 11:16:34,056] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:16:34,056] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:16:34,057] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:16:34,064] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:34,068] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:16:34,068] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:16:34,068] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 11:16:34,637] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 11:16:34,640] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:16:34,640] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:34,640] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:16:34,640] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:34,640] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:16:34,641] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:34,642] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:16:34,657] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:16:34,658] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 11:16:34,658] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:16:34,684] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:16:34,687] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 11:16:38,264] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 11:16:38,273] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 11:16:38,280] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 11:16:38,285] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 11:21:38,262] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 11:21:38,264] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 11:21:38,264] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 11:21:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 11:22:53,714] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:22:53,717] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:22:53,718] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 11:22:53,719] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 11:22:53,719] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:22:53,720] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:22:53,722] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:22:53,723] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:22:53,723] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:22:53,733] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:23:30,089] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics mariotest to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 11:23:30,090] INFO [DeleteTopicsListener on Controller 0]: Starting topic deletion for topics mariotest (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 11:23:30,092] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:23:30,092] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:23:30,092] INFO [delete-topics-thread-0], Deletion of topic mariotest (re)started (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:23:30,092] INFO [Topic Deletion Manager 0], Topic deletion callback for mariotest (kafka.controller.TopicDeletionManager)
[2017-06-28 11:23:30,093] INFO [Topic Deletion Manager 0], Partition deletion callback for [mariotest,0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:23:30,093] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:23:30,093] DEBUG [Controller 0]: Removing replica 0 from ISR 0 for partition [mariotest,0]. (kafka.controller.KafkaController)
[2017-06-28 11:23:30,100] INFO [Controller 0]: New leader and ISR for partition [mariotest,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2017-06-28 11:23:30,101] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:23:30,101] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:23:30,101] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:23:30,101] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:23:30,101] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:23:30,101] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2017-06-28 11:23:30,101] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 11:23:30,110] DEBUG [Topic Deletion Manager 0], Delete topic callback invoked for {error_code=0,partitions=[{topic=mariotest,partition=0,error_code=0}]} (kafka.controller.TopicDeletionManager)
[2017-06-28 11:23:30,110] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2017-06-28 11:23:30,110] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:23:30,110] INFO [delete-topics-thread-0], Handling deletion for topics mariotest (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:23:30,111] DEBUG [Replica state machine on controller 0]: Are all replicas for topic mariotest deleted Map([Topic=mariotest,Partition=0,Replica=0] -> ReplicaDeletionSuccessful) (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:23:30,111] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:23:30,111] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:23:30,111] INFO [Partition state machine on Controller 0]: Invoking state change to NonExistentPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:23:30,120] INFO [delete-topics-thread-0], Deletion of topic mariotest successfully completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2017-06-28 11:23:30,120] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2017-06-28 11:23:30,120] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children __consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:23:30,120] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:23:30,121] DEBUG [DeleteTopicsListener on Controller 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2017-06-28 11:24:44,648] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children mariotest,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:24:44,650] INFO [TopicChangeListener on Controller 0]: New topics: [Set(mariotest)], deleted topics: [Set()], new partition replica assignment [Map([mariotest,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-28 11:24:44,650] INFO [Controller 0]: New topic creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 11:24:44,651] INFO [Controller 0]: New partition creation callback for [mariotest,0] (kafka.controller.KafkaController)
[2017-06-28 11:24:44,651] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:24:44,651] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:24:44,652] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [mariotest,0] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:24:44,652] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [mariotest,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-28 11:24:44,653] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [mariotest,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:81) (kafka.controller.PartitionStateMachine)
[2017-06-28 11:24:44,662] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=mariotest,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-28 11:26:38,262] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 11:26:38,263] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 11:26:38,263] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 11:26:38,263] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 11:31:38,264] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 11:31:38,270] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 11:31:38,270] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 11:31:38,271] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 11:36:38,262] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 11:36:38,263] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 11:36:38,263] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 11:36:38,264] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 11:41:38,262] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 11:41:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 11:41:38,265] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 11:41:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 11:46:38,262] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 11:46:38,263] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 11:46:38,263] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 11:46:38,263] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 11:51:38,262] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 11:51:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 11:51:38,266] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 11:51:38,266] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-28 11:56:38,263] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-28 11:56:38,265] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([__consumer_offsets,19] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [__consumer_offsets,29] -> List(0), [__consumer_offsets,41] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,14] -> List(0), [__consumer_offsets,40] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [__consumer_offsets,20] -> List(0), [__consumer_offsets,21] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,12] -> List(0), [__consumer_offsets,8] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [mariotest,0] -> List(0), [__consumer_offsets,1] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-28 11:56:38,265] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-28 11:56:38,265] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
